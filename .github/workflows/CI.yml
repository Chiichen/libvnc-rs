name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust nightly
        run: rustup update nightly
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: Cargo Fmt Check
        run: cargo fmt --all -- --check
  build-from-package:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust nightly
        run: rustup update nightly
      - name: Install libvncserver (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update &&
          sudo apt-get install libvncserver-dev
      - name: Install libvncserver (Macos)
        if: matrix.os == 'macos-latest'
        run: brew install libvncserver
      - name: Build
        run: cargo build -p libvnc --features pkg --verbose
      - name: Test
        run: |
          cargo test -p libvnc --features pkg --verbose &
          cargo test -p libvnc-sys --features pkg --verbose

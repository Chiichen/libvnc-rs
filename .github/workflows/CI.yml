name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install libvncserver (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libvncserver-dev 
    - name: Install libvncserver (Macos)
      if: matrix.os == 'macos-latest'
      run: brew install libvncserver
    - name: Install Rust nightly
      run : rustup update nightly
    - name: Build
      run: cargo build --verbose
    - name: Test
      run: cargo test --verbose
    - name: Clippy
      run: cargo clippy -- -D warnings
    - name: Cargo Fmt Check
      run : cargo fmt --all -- --check
  build-from-source:
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust nightly
        run : rustup update nightly
      - name: Build
        run: cargo build -p libvnc --no-default-features --verbose
      - name: Test
        run: |
          cargo test -p libvnc --no-default-features --verbose &
          cargo test -p libvnc-sys --verbose